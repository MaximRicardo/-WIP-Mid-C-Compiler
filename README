MCC/Mid C Compiler


    This is a work-in-progress C Compiler written entirely in C89 with no
non-standard or external libraries or macros.
    The eventual goal of this project is to port it to a custom ISA, and write
an OS in it.
    Currently the compiler uses an x86 backend but that's cuz I haven't
actually made the ISA yet. Also x86 is easy to use cuz it has a bunch of
pre-built debuggers and I get to use glibc.


FEATURES:


Thus far the compiler has:
    variables
    multiple types
        (char, short, int, long, all of their unsigned equivalents, and void)
    function definitions
    function calls
    function prototyping
    static functions
    return statements
    function argument error checking
    if/else statements
    pointers
    arrays
    while loops
    for loops
    typedefs
    type casts
    constant-folding
    #define macros
    signed/unsigned keywords

Next thing I'ma implement (maybe):
    structs
    global variables
    static variables

    Also, the compiler has a custom debugging keyword ':', which prints the
value currently stored in EAX.


HOW TO USE:


    Run the command:

        mcc --help

    to get a menu showing all the available command line arguments.


STANDARD COMPLIANCE:


    I'm not planning on making the compiler completely compliant with any
C-standard, but the language will be extremely similar to C89. A list of
differences will be added once the compiler reaches a stable release.

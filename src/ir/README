MCCIR/Mid C Compiler Intermediate Representation


    MCCIR is an Intermediate Language designed for easy optimization. The IR is
in SSA format.


NOTABLE INSTRUCTIONS:


    je REG_0/IMM_0, REG_1/IMM_1, LABEL_2, LABEL_3

Jumps to LABEL_2 if the first and second arguments are equal, else jumps to
LABEL_3.

    alloca REG_0, IMM_1, IMM_2

This instruction allocates IMM_1 bytes of space on the stack, with an alignment
of IMM_2 bytes, and puts a ptr to the start of the allocated space in REG_0.
The specified alignment MUST be a power of 2.

    store REG_0/IMM_0, REG_1, REG_2/IMM_2

Stores the first argument at the second argument offset by the third
argument (in bytes).

    load REG_0, REG_1, REG_2/IMM_2

Loads the value at the second argument offset by the third argument (in bytes),
into the first argument.

    alloc_reg REG_0

Tells the backend to allocate space for a virtual register. The allocated space
could be either a CPU register or a location on the stack.


OTHER IMPORTANT INFO:

    All identifiers beginning with '__' are reserved by the implementation.

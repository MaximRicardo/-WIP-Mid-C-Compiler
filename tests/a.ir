;--------------------------------------
;Pre-Optimizations
;--------------------------------------
define i32 @main(i32 %arg.0, u32** %arg.1) {
start:
    alloca i32* %x.nr0, u32 4, u32 4
    alloca i32* %i.nr0, u32 4, u32 4
    mov i32 %x.nr0.init, i32 0
    store i32 %x.nr0.init, i32* %x.nr0, u32 0
    store i32 0, i32* %i.nr0, u32 0
    mov i32 %0, i32 0
    jmp for_0
for_0:
    load i32 %1, i32* %i.nr0, u32 0
    setlt i32 %2, i32 %1, i32 100
    je i32 %2, i32 0, for_end_0, for_body_0
for_body_0:
    load i32 %3, i32* %i.nr0, u32 0
    add i32 %4, i32 %3, i32 1
    store i32 %4, i32* %i.nr0, u32 0
    mov i32 %5, i32 %4
    load i32 %6, i32* %x.nr0, u32 0
    add i32 %7, i32 %6, i32 2
    store i32 %7, i32* %x.nr0, u32 0
    mov i32 %8, i32 %7
    jmp for_0
for_end_0:
    load i32 %9, i32* %x.nr0, u32 0
    ret i32 %9
}

;--------------------------------------
;Post-Optimizations
;--------------------------------------
define i32 @main(i32 %arg.0, u32** %arg.1) {
start:
    mov i32 %x.nr0, i32 0
    mov i32 %i.nr0, i32 0
    jmp for_0
for_0:
    phi i32 %i.nr0.0, i32 %i.nr0.1, i32 %i.nr0
    phi i32 %x.nr0.0, i32 %x.nr0.1, i32 %x.nr0
    setlt i32 %2, i32 %i.nr0.0, i32 100
    je i32 %2, i32 0, for_end_0, for_body_0
for_body_0:
    add i32 %4, i32 %i.nr0.0, i32 1
    mov i32 %i.nr0.1, i32 %4
    add i32 %7, i32 %x.nr0.0, i32 2
    mov i32 %x.nr0.1, i32 %7
    jmp for_0
for_end_0:
    ret i32 %x.nr0.1
}

;--------------------------------------
;Final State
;--------------------------------------
define i32 @main(i32 %arg.0, u32** %arg.1) {
start:
    mov i32 %__eax, i32 0
    mov i32 %__ebx, i32 0
    jmp for_0
for_0:
    setlt i32 %__ecx, i32 %__ebx, i32 100
    je i32 %__ecx, i32 0, for_end_0, for_body_0
for_body_0:
    add i32 %__ecx, i32 %__ebx, i32 1
    mov i32 %__ebx, i32 %__ecx
    add i32 %__ebx, i32 %__eax, i32 2
    mov i32 %__eax, i32 %__ebx
    jmp for_0
for_end_0:
    ret i32 %__eax
}

